managed implementation in class zbp_r_rap_travel unique;
strict ( 2 );

define behavior for ZR_RAP_TRAVEL alias Travel
persistent table /dmo/travel_m
//If a Travel request is locked, the other users cannot edit the childs - like its Booking and BookSuppl
lock master
//Controls the permission and security setting for our RAP BO
authorization master ( instance )
//Controlling the concurrency
etag master LastChangedAt
early numbering
{
  create;
  update;
  delete;

  field ( readonly )
  TravelId;

  association _BookingChild { create; }

  mapping for /dmo/travel_m
  {
    TravelId = travel_id;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    TotalPrice = total_price;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    Description = description;
    OverallStatus = overall_status;
    CreatedBy = created_by;
    LastChangedBy = last_changed_by;
    CreatedAt = created_at;
    LastChangedAt = last_changed_at;
  }
}

define behavior for ZI_RAP_BOOKING alias Booking
persistent table /dmo/booking_m
lock dependent by _TravelRoot
authorization dependent by _TravelRoot
etag master LastChangedAt
{
  update;
  delete;

  field ( readonly )
  TravelId,
  BookingId;

  association _TravelRoot;
  association _BookSupplChild { create; }

  mapping for /dmo/booking_m
  {
    TravelId = travel_id;
    BookingId = booking_id;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    BookingStatus = booking_status;
    LastChangedAt = last_changed_at;
  }
}

define behavior for ZI_RAP_BOOKSUPPL alias BookingSuppl
persistent table /dmo/booksuppl_m
lock dependent by _TravelRoot
authorization dependent by _TravelRoot
etag master LastChangedAt
{
  update;
  delete;

  field ( readonly )
  TravelId,
  BookingId,
  BookingSupplementId;

  association _TravelRoot;
  association _BookingChild;

  mapping for /dmo/booksuppl_m
  {
    TravelId = travel_id;
    BookingId = booking_id;
    BookingSupplementId = booking_supplement_id;
    SupplementId = supplement_id;
    Price = price;
    CurrencyCode = currency_code;
    LastChangedAt = last_changed_at;
  }
}

//define behavior for ZI_RAP_IMAGE alias <alias_name>
//persistent table zdb_rap_image
//lock dependent by _TravelRoot
//authorization dependent by _TravelRoot
////etag master <field_name>
//{
//  update;
//  delete;
//  field ( readonly ) TravelId, ImageId;
//  association _TravelRoot;
//}